"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Listener = void 0;
class Listener {
    constructor(client) {
        this.ackWait = 5 * 1000;
        this.client = client;
    }
    subscriptionOptions() {
        return this.client
            .subscriptionOptions()
            .setDeliverAllAvailable() //Para que envie todos los eventos que se generaron
            .setManualAckMode(true) //Para obligarnos a dar una respuesta al publisher para que sepa que los procesos que dispara salen bien
            .setAckWait(this.ackWait)
            .setDurableName(this.queueGroupName); // Para que se envien todos solo los eventos que fallaron a la hora de la entrega
    }
    listen() {
        const subscription = this.client.subscribe(this.subject, //Topico por el cual se van a subscribir
        this.queueGroupName, //Para que no lo haga multiples veces y solo lo envÃ­e a una instancia 
        this.subscriptionOptions());
        subscription.on('message', (message) => {
            console.log(`Message received: ${this.subject} / ${this.queueGroupName}`);
            const parsedDate = this.parseMessage(message);
            this.onMessage(parsedDate, message);
        });
    }
    parseMessage(message) {
        const data = message.getData();
        return typeof data === 'string'
            ? JSON.parse(data)
            : JSON.parse(data.toString('utf8'));
    }
}
exports.Listener = Listener;
